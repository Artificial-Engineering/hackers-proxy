{
	"header": {
		"identifier": "app.Main",
		"attaches": {},
		"tags": {},
		"requires": [
			"app.interface.Bot",
			"app.net.Scraper",
			"app.plugin.Reddit",
			"app.state.Browse",
			"app.state.Dialog",
			"app.state.Help",
			"app.state.Settings",
			"lychee.Input"
		],
		"includes": [
			"lychee.app.Main"
		],
		"supports": {},
		"type": "Composite"
	},
	"memory": {
		"_app": {
			"chunk": "lychee.import('app')",
			"type": "lychee.Namespace",
			"value": {
				"reference": "app",
				"arguments": []
			}
		},
		"_Bot": {
			"chunk": "lychee.import('app.interface.Bot')",
			"type": "lychee.Definition",
			"value": {
				"reference": "app.interface.Bot",
				"arguments": []
			}
		},
		"_Main": {
			"chunk": "lychee.import('lychee.app.Main')",
			"type": "lychee.Definition",
			"value": {
				"reference": "lychee.app.Main",
				"arguments": []
			}
		},
		"_Scraper": {
			"chunk": "lychee.import('app.net.Scraper')",
			"type": "lychee.Definition",
			"value": {
				"reference": "app.net.Scraper",
				"arguments": []
			}
		},
		"_WM": {
			"chunk": "lychee.import('WM')",
			"type": "WM",
			"value": {
				"reference": "WM",
				"arguments": []
			}
		}
	},
	"errors": [],
	"result": {
		"constructor": {
			"type": "function",
			"body": "function(data) {\n\n\t\tlet states = Object.assign({\n\t\t\tclient:   null,\n\t\t\tserver:   null,\n\n\t\t\tinput:    null,\n\t\t\tjukebox:  null,\n\t\t\trenderer: null,\n\t\t\tviewport: null,\n\n\t\t\t// Custom Settings\n\t\t\ttethering:   false,\n\t\t\tstealth:     true,\n\t\t\tconnections: 8,\n\t\t\tcache:       '~/Research'\n\n\t\t}, data);\n\n\n\t\tthis.bot     = new _Bot();\n\t\tthis.scraper = new _Scraper(this);\n\t\tthis.plugins = {};\n\n\n\t\t_Main.call(this, states);\n\n\t\tstates = null;\n\n\n\n\t\t/*\n\t\t * INITIALIZATION\n\t\t */\n\n\t\tthis.bind('load', function(oncomplete) {\n\n\t\t\tthis.settings.appserver = this.settings.server;\n\t\t\tthis.settings.server    = null;\n\n\t\t\tthis.settings.appclient = this.settings.client;\n\t\t\tthis.settings.client    = null;\n\n\n\t\t\toncomplete(true);\n\n\t\t}, this, true);\n\n\t\tthis.bind('init', function() {\n\n\t\t\t// let appserver = this.settings.appserver || null;\n\t\t\t// if (appserver !== null) {\n\t\t\t// \tthis.server = new _app.net.Server(appserver);\n\t\t\t// }\n\n\t\t\t// let appclient = this.settings.appclient || null;\n\t\t\t// if (appclient !== null) {\n\t\t\t// \tthis.client = new _app.net.Client(appclient);\n\t\t\t// }\n\n\t\t\tlet loop = this.loop;\n\t\t\tif (loop !== null) {\n\t\t\t\tloop.unbind('render');\n\t\t\t\tloop.unbind('update');\n\t\t\t}\n\n\n\t\t\tthis.setPlugin('reddit', new _app.plugin.Reddit(this));\n\n\n\t\t\tthis.setState('dialog',   new _app.state.Dialog(this));\n\t\t\tthis.setState('browse',   new _app.state.Browse(this));\n\t\t\tthis.setState('help',     new _app.state.Help(this));\n\t\t\tthis.setState('settings', new _app.state.Settings(this));\n\n\t\t\tthis.changeState('dialog');\n\n\t\t}, this, true);\n\n\t}",
			"hash": "b707932e",
			"parameters": [
				{
					"chunk": null,
					"name": "data",
					"type": "Object"
				}
			]
		},
		"states": {},
		"properties": {
			"bot": {
				"chunk": "this.bot     = new _Bot();",
				"value": {
					"chunk": "new _Bot()",
					"type": "_Bot"
				}
			},
			"scraper": {
				"chunk": "this.scraper = new _Scraper(this);",
				"value": {
					"chunk": "new _Scraper(this)",
					"type": "_Scraper"
				}
			},
			"plugins": {
				"chunk": "this.plugins = {};",
				"value": {
					"chunk": "{}",
					"type": "Object",
					"value": {}
				}
			}
		},
		"enums": {},
		"events": {},
		"methods": {
			"deserialize": {
				"type": "function",
				"body": "function(blob) {}",
				"chunk": "function(blob) {",
				"hash": "cf6d9c5f",
				"parameters": [
					{
						"name": "blob",
						"type": "SerializationBlob",
						"value": {}
					}
				],
				"values": [
					{
						"type": "undefined"
					}
				]
			},
			"serialize": {
				"chunk": "function() {\n\n\t\t\tlet data = _Main.prototype.serialize.call(this);\n\t\t\tdata['constructor'] = 'app.Main';\n\n\n\t\t\tlet settings = data['arguments'][0] || {};\n\t\t\tlet blob     = data['blob'] || {};\n\n\n\t\t\tif (this.settings.appclient !== null) settings.client = this.defaults.client;\n\t\t\tif (this.settings.appserver !== null) settings.server = this.defaults.server;\n\n\n\t\t\tif (this.bot !== null)     blob.bot     = lychee.serialize(this.bot);\n\t\t\tif (this.scraper !== null) blob.scraper = lychee.serialize(this.scraper);\n\n\n\t\t\tdata['arguments'][0] = settings;\n\t\t\tdata['blob']         = Object.keys(blob).length > 0 ? blob : null;\n\n\n\t\t\treturn data;\n\n\t\t}",
				"type": "function",
				"hash": "5c52f261",
				"parameters": [],
				"values": [
					{
						"chunk": "{ 'constructor': 'lychee.event.Emitter',\n\t\t\t\t'arguments':   [],\n\t\t\t\t'blob':        Object.keys(blob).length > 0 ? blob : null\n\t\t\t}",
						"type": "Object",
						"value": {}
					}
				]
			},
			"command": {
				"chunk": "function(sentence) {\n\n\t\t\tsentence = typeof sentence === 'string' ? sentence : null;\n\n\n\t\t\tif (sentence !== null) {\n\n\t\t\t\tlet bot = this.bot;\n\t\t\t\tif (bot !== null) {\n\n\t\t\t\t\tlet suggestions = bot.command(sentence.split(' ').map(function(word) {\n\t\t\t\t\t\treturn word.replace(/(\\?|!|\\.)/g, '').trim();\n\t\t\t\t\t}).filter(function(word) {\n\t\t\t\t\t\treturn word !== '';\n\t\t\t\t\t}).join(' '));\n\n\t\t\t\t\tif (suggestions !== null) {\n\n\t\t\t\t\t\tlet result = false;\n\n\t\t\t\t\t\tfor (let s = 0, sl = suggestions.length; s < sl; s++) {\n\n\t\t\t\t\t\t\tlet suggestion  = suggestions[s];\n\t\t\t\t\t\t\tlet intent      = suggestion.intent;\n\n\t\t\t\t\t\t\tlet action = intent.action || null;\n\t\t\t\t\t\t\tif (action !== null) {\n\n\t\t\t\t\t\t\t\tlet state = this.__states[action] || null;\n\t\t\t\t\t\t\t\tif (state !== null) {\n\n\t\t\t\t\t\t\t\t\tif (state !== this.state) {\n\n\t\t\t\t\t\t\t\t\t\tresult = this.changeState(action, intent);\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t} else if (state === this.state) {\n\n\t\t\t\t\t\t\t\t\t\tresult = this.state.update(intent);\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn result;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "3d8a609d",
				"parameters": [
					{
						"chunk": "typeof sentence === 'string' ? sentence : null",
						"name": "sentence",
						"type": "String",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "result",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"changeState": {
				"chunk": "function(id, data, silent) {\n\n\t\t\tid     = typeof id === 'string' ? id   : null;\n\t\t\tdata   = data !== undefined     ? data : null;\n\t\t\tsilent = silent === true;\n\n\n\t\t\tif (id !== null) {\n\n\t\t\t\tlet result = _Main.prototype.changeState.call(this, id, data);\n\t\t\t\tif (result === true && silent === false) {\n\n\t\t\t\t\tif (_WM !== null) {\n\t\t\t\t\t\t_WM.changeState(id, data);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "23a53bdf",
				"parameters": [
					{
						"chunk": "typeof id === 'string' ? id   : null",
						"name": "id",
						"type": "String",
						"value": null
					},
					{
						"chunk": "data !== undefined     ? data : null",
						"name": "data",
						"type": "Object",
						"value": {}
					},
					{
						"chunk": "silent === true",
						"name": "silent",
						"type": "Boolean",
						"value": true
					}
				],
				"values": [
					{
						"chunk": "result",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			},
			"findPlugin": {
				"chunk": "function(url) {\n\n\t\t\turl = typeof url === 'string' ? url : null;\n\n\n\t\t\tif (url !== null) {\n\n\t\t\t\tlet found = null;\n\n\t\t\t\tfor (let p in this.plugins) {\n\n\t\t\t\t\tif (p === 'generic') continue;\n\n\t\t\t\t\tlet plugin = this.plugins[p];\n\t\t\t\t\tif (plugin.can(url) === true) {\n\t\t\t\t\t\tfound = p;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn found;\n\n\t\t\t}\n\n\n\t\t\treturn null;\n\n\t\t}",
				"type": "function",
				"hash": "c39e9541",
				"parameters": [
					{
						"chunk": "typeof url === 'string' ? url : null",
						"name": "url",
						"type": "String",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "null",
						"type": "null",
						"value": null
					}
				]
			},
			"getPlugin": {
				"chunk": "function(id) {\n\n\t\t\tid = typeof id === 'string' ? id : null;\n\n\n\t\t\tif (id !== null && this.plugins[id] !== undefined) {\n\n\t\t\t\treturn this.plugins[id];\n\n\t\t\t}\n\n\n\t\t\treturn null;\n\n\t\t}",
				"type": "function",
				"hash": "36d652b0",
				"parameters": [
					{
						"chunk": "typeof id === 'string' ? id : null",
						"name": "id",
						"type": "String",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "this.plugins[id]",
						"type": "undefined",
						"value": {
							"reference": "this.plugins[id]",
							"arguments": []
						}
					},
					{
						"chunk": "null",
						"type": "null",
						"value": null
					}
				]
			},
			"setPlugin": {
				"chunk": "function(id, plugin) {\n\n\t\t\tid     = typeof id === 'string'   ? id     : null;\n\t\t\tplugin = plugin instanceof Object ? plugin : null;\n\n\n\t\t\tif (id !== null) {\n\n\t\t\t\tthis.plugins[id] = plugin;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\n\t\t\treturn false;\n\n\t\t}",
				"type": "function",
				"hash": "30c9ffd8",
				"parameters": [
					{
						"chunk": "typeof id === 'string'   ? id     : null",
						"name": "id",
						"type": "String",
						"value": null
					},
					{
						"chunk": "plugin instanceof Object ? plugin : null",
						"name": "plugin",
						"type": "Object",
						"value": null
					}
				],
				"values": [
					{
						"chunk": "true",
						"type": "Boolean",
						"value": true
					},
					{
						"chunk": "false",
						"type": "Boolean",
						"value": false
					}
				]
			}
		}
	}
}